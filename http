svc := service.New()
启动服务，监听端口
httpSrv := http.New(svc)
一个信号缓存区
c := make(chan os.Signal, 1)
关注的信号 如果有挂起退出 终断 中断，【无阻塞等待】
signal.Notify(c, syscall.SIGHUP, syscall.SIGQUIT, syscall.SIGTERM, syscall.SIGINT)

无限循环
for {
    阻塞等待 c中有信号
		s := <-c
		log.Info("get a signal %s", s.String())
    
    判断信号
		switch s {
    如果是退出 终断 中断 信号
		case syscall.SIGQUIT, syscall.SIGTERM, syscall.SIGINT:
      上下文设置35秒的超时时间（这里有疑问）
			ctx, _ := context.WithTimeout(context.Background(), 35*time.Second)
      关机/并通知到ctx（这里有疑问）
			httpSrv.Shutdown(ctx)
			log.Info("cms-job exit")
      服务关闭
			svc.Close()
      // 休息一秒钟
			time.Sleep(time.Second)
			return
    // 如果挂起不做任何事情
		case syscall.SIGHUP:
		default:
			return
		}
	}
